name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  container:
    name: Container build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Initialize and update libbpf submodule
      run: git submodule init && git submodule update
    - name: Get branch name
      shell: bash
      run: echo "GITHUB_BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
    - name: Build container
      env:
        TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: make container
    - name: Login to registry
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | buildah login -u parca-dev --password-stdin ghcr.io
        echo "${{ secrets.QUAY_PASSWORD }}" | buildah login -u "${{ secrets.QUAY_USERNAME }}" --password-stdin quay.io
    - name: Push container
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        make push-container
        make push-quay-container
  go-test:
    name: Go Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    # We call out to graphviz
    - name: Install llvm
      run: sudo apt-get install llvm libelf-dev

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Initialize and update libbpf submodule
      run: git submodule init && git submodule update

    - name: Configure git for private modules
      env:
        TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: git config --global url."https://parca:${TOKEN}@github.com".insteadOf "https://github.com"

    - uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test
      run: make bpf test vet

    - name: Format
      run: |
        make format
        git diff --exit-code

    - name: Build
      run: make build

    - name: Docs check
      run: |
        make README.md
        git diff --exit-code
