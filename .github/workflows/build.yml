name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # renovate: datasource=go depName=mvdan.cc/gofumpt
  GOFUMPT_VERSION: v0.4.0
  # renovate: datasource=go depName=github.com/golangci/golangci-lint
  GOLANGCI_LINT_VERSION: v1.50.0
  RUSTFLAGS: --deny warnings
  RUSTDOCFLAGS: --deny warnings

jobs:
  skip-check:
    name: Skip check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip-check
        uses: fkirc/skip-duplicate-actions@f11521568414503656a5af807dc3018c012552c4 # tag=v5.2.0
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths: |-
            [
              "**.go",
              "**.rs",
              ".github/workflows/build.yml",
              ".go-version",
              "3rdparty",
              "Makefile",
              "bpf/**/.cargo",
              "bpf/**/Cargo.*",
              "bpf/.cargo",
              "bpf/Cargo.*",
              "bpf/Makefile",
              "go.mod",
              "go.sum",
              "rust-toolchain.toml"
            ]
          skip_after_successful_duplicate: false

  go-build-test:
    name: Go Build
    runs-on: ubuntu-latest
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    steps:
      - name: Check out the code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - name: Set up Go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3.3.0
        with:
          go-version-file: .go-version
          check-latest: true
          cache: true

      - name: Set up gofumpt
        run: go install "mvdan.cc/gofumpt@${GOFUMPT_VERSION}"

      - name: Set up Rust
        # Yes, oddly `rustup show` installs the toolchain (:
        # https://github.com/rust-lang/rustup/issues/2686
        run: rustup show

      - name: Rust cache
        uses: Swatinem/rust-cache@6720f05bc48b77f96918929a9019fb2203ff71f8 # tag=v2.0.0
        with:
          workspaces: bpf -> target

      - name: Install LLVM (Aya, BPF dependency)
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo -e "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main\n" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt-get update -y
          sudo apt-get install -yq llvm-14-dev libclang-14-dev

      - name: Run eBPF toolchain setup
        run: make -C bpf setup

      - name: Build BPF
        run: make bpf

      - name: Install libbpf dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -yq libelf-dev zlib1g-dev

      - name: Initialize and update libbpf submodule
        run: git submodule init && git submodule update

      - name: Build libbpf
        run: make libbpf

      - name: Build
        run: make build

      - name: Test
        run: |
          make test ENABLE_RACE=yes
          # make test/profiler (Needs to be fixed, somehow fails because of generics)

      - name: Format
        run: make format-check

      - name: Lint Rust
        run: make -C bpf lint

      - name: Lint
        uses: golangci/golangci-lint-action@537aa1903e5d359d0b27dbc19ddd22c5087f3fbc # tag=v3.2.0
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
