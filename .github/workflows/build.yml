name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  goreleaser:
    name: Goreleaer Dry
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install llvm
        run: sudo apt-get install llvm libelf-dev

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Initialize and update libbpf submodule
        run: git submodule init && git submodule update

      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://parca:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Build eBPF
        run: make bpf

      - name: Set Env
        run:  echo "BPF_OUT=$(pwd)/dist" >> $GITHUB_ENV

      - name: Dry Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate --skip-publish
        env:
          # BPF_OUT: ${{ env.GITHUB_WORKSPACE }}/dist
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  container:
    name: Container build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Initialize and update libbpf submodule
        run: git submodule init && git submodule update

      - name: Get branch name
        shell: bash
        run: echo "GITHUB_BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Build container
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: make container

      - name: Login to registry
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | buildah login -u "${{ secrets.QUAY_USERNAME }}" --password-stdin quay.io

      - name: Push container
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          make push-quay-container

  go-test:
    name: Go Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Install llvm
        run: sudo apt-get install llvm libelf-dev

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.0

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Initialize and update libbpf submodule
        run: git submodule init && git submodule update

      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://parca:${TOKEN}@github.com".insteadOf "https://github.com"

      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: make bpf test vet lint

      - name: Format
        run: |
          make format
          git diff --exit-code

      - name: Build
        run: make build

      - name: Archive generatated artifacts
        uses: actions/upload-artifact@v2
        with:
          name: parca-agent-dist
          if-no-files-found: error
          path: |
            dist
            !dist/libbpf
            !dist/*.txt
