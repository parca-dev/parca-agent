name: Build

on:
  push:
    branches:
    - main
    - release-*
  pull_request:
    branches:
    - main
    - release-*

env:
  # renovate: datasource=go depName=github.com/florianl/bluebox
  BLUEBOX_VERSION: v0.0.1
  # renovate: datasource=github-tags depName=NixOS/nix
  NIX_VERSION: 2.13.2

jobs:
  skip-check:
    name: Skip check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip-check
        uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281 # v5.3.0
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths: |-
            [
              "**.go",
              "**.nix",
              ".github/workflows/build.yml",
              ".go-version",
              "Makefile",
              "bpf/**",
              "flake.lock",
              "go.mod",
              "go.sum",
              "kerneltest/**",
              "VERSION"
            ]
          skip_after_successful_duplicate: false

  go-build-test:
    name: Go Build
    runs-on: ubuntu-latest
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    steps:
      - name: Check out the code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          submodules: true

      - name: Set up Nix
        uses: cachix/install-nix-action@5c11eae19dba042788936d4f1c9685fdd814ac49 # v19
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: https://releases.nixos.org/nix/nix-${{ env.NIX_VERSION }}/install

      - name: Set up Cachix
        uses: cachix/cachix-action@6a9a34cdd93d0ae4b4b59fd678660efb08109f2f # v12
        with:
          name: parca-agent
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          skipPush: ${{ github.event_name == 'pull_request' }}

      - name: Set up DevShell
        run: nix develop --command true

      - name: clang version
        shell: nix develop --command bash -e {0}
        run:  |
          clang -v
          ld --version

      - name: Show clang-format version
        shell: nix develop --command bash -e {0}
        run: clang-format --version

      - name: Build
        run: nix build --print-build-logs --print-out-paths

      - name: Show kernel version
        run: uname -a

      - name: Show Go version
        run: |
          which go
          go version
          go env
          echo $PATH

      - name: Test
        shell: nix develop --command bash -e {0}
        run: make GO=`which go` test ENABLE_RACE=yes

      - name: Test unwind tables
        shell: nix develop --command bash -e {0}
        run: make test-dwarf-unwind-tables

      - name: Format
        shell: nix develop --command bash -e {0}
        run: make format-check

      - name: Build initramfs
        shell: nix develop --command bash -e {0}
        run: |
          go install "github.com/florianl/bluebox@${BLUEBOX_VERSION}"
          export PATH="$(go env GOPATH)/bin:${PATH}"
          make initramfs

      - name: Upload initramfs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: initramfs
          path: |
            kerneltest/initramfs.cpio

  vmtest:
    name: kernel tests
    runs-on: ubuntu-latest
    needs: go-build-test
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    steps:
      - name: Check out the code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Install dependencies
        run: sudo apt -y install qemu-system-x86 curl

      - name: Download previously generated initramfs
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: initramfs
          path: kerneltest/

      - name: Run vmtests
        run: ./kerneltest/vmtest.sh
