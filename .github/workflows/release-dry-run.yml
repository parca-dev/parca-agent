name: Release (Dry Run)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # renovate: datasource=go depName=github.com/goreleaser/goreleaser
  GORELEASER_VERSION: v1.9.2
  # renovate: datasource=go depName=github.com/goreleaser/goreleaser-cross
  GORELEASER_CROSS_VERSION: v1.18.3

permissions:
  contents: write

jobs:
  skip-check:
    name: Skip check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip-check
        uses: fkirc/skip-duplicate-actions@9d116fa7e55f295019cfab7e3ab72b478bcf7fdd # tag=v4.0.0
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths: |-
            [
              "**.go",
              "go.mod",
              "go.sum",
              "rust-toolchain.toml",
              "bpf/.cargo",
              "bpf/**/.cargo",
              "bpf/Cargo.*",
              "bpf/**/Cargo.*",
              "3rdparty",
              ".github/workflows/release-dry-run.yml"
            ]

  dependencies:
    name: Build and download dependencies
    runs-on: ubuntu-latest
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}
    steps:
      - name: Check out the code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: PWD
        run: |
          pwd
          ls -alR .

      - name: Set up Go
        uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # tag=v3.2.0
        with:
          go-version-file: .go-version
          check-latest: true
          cache: true

      - name: Set up Rust
        # Yes, oddly `rustup show` installs the toolchain (:
        # https://github.com/rust-lang/rustup/issues/2686
        run: rustup show

      - name: Rust Cache
        uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # tag=v1.4.0
        with:
          working-directory: ./bpf

      - name: Install LLVM (Aya, BPF dependency)
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo -e "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main\n" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt-get update -y
          sudo apt-get install -yq llvm-14-dev libclang-14-dev

      - name: Run eBPF toolchain setup
        run: |
          make -C bpf setup
          cd bpf && cargo check

      - name: Build BPF
        run: make bpf

      - name: Initialize and update libbpf submodule
        run: git submodule init && git submodule update

      - name: Validate
        uses: goreleaser/goreleaser-action@68acf3b1adf004ac9c2f0a4259e85c5f66e99bef # tag=v3.0.0
        with:
          distribution: goreleaser
          version: ${{ env.GORELEASER_VERSION }}
          args: check

  release-dry-run:
    name: Release Dry Run
    runs-on: ubuntu-latest
    needs: dependencies
    container:
      image: goreleaser/goreleaser-cross:v1.18.3 # ${{ env.GORELEASER_CROSS_VERSION }}
      options: --privileged
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Install libbpf dependencies
        run: |
          apt-get update -y
          apt-get install -yq lld libelf-dev zlib1g-dev libelf-dev:arm64 zlib1g-dev:arm64
      - name: Run Goreleaser
        run: |
          cd /app
          goreleaser release --rm-dist --skip-validate --skip-publish
