name: Snap

on:
  push:
    branches:
    - main
    - release-*
  pull_request:
    branches:
    - main
    - release-*

env:
  # renovate: datasource=github-tags depname=nixos/nix
  NIX_VERSION: 2.13.2

permissions:
  contents: write

jobs:
  skip-check:
    name: Skip check
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip-check.outputs.should_skip }}
    permissions:
      actions: write
      contents: read
    steps:
      - id: skip-check
        uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281 # v5.3.0
        with:
          do_not_skip: '["schedule", "workflow_dispatch"]'
          paths: |-
            [
              "**.go",
              "**.nix",
              ".github/workflows/snap.yml",
              ".go-version",
              "Makefile",
              "bpf/Makefile",
              "go.mod",
              "go.sum",
              "VERSION"
            ]
          skip_after_successful_duplicate: false

  snap:
    name: Build Snap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0

      - name: Set up Nix
        uses: cachix/install-nix-action@5c11eae19dba042788936d4f1c9685fdd814ac49 # v19
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: https://releases.nixos.org/nix/nix-${{ env.NIX_VERSION }}/install

      - name: Set up Cachix
        uses: cachix/cachix-action@6a9a34cdd93d0ae4b4b59fd678660efb08109f2f # v12
        with:
          name: parca-agent
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          skipPush: ${{ github.event_name == 'pull_request' }}

      - name: Setup LXD (for Snapcraft)
        uses: whywaita/setup-lxd@16e1bb2e132ea11dfa2a8b8be7750cb9ab1ccbcd # tag=v1.0.0
        with:
          lxd_version: latest/stable

      - name: Setup Snapcraft
        run: |
          sudo snap install snapcraft --channel 7.x/stable --classic

          # Unbork LXD networking due to conflict with Docker iptables rules
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT

      - name: Write version
        run:
          make version >snap/local/VERSION

      # Note: Nix can build snaps, but the version is not configurable
      # https://nixos.org/manual/nixpkgs/stable/#sec-pkgs-snapTools
      # https://github.com/NixOS/nixpkgs/blob/26c3ff3794054e2957aaab39409a443bc20cb665/pkgs/build-support/snap/make-snap.nix#L66-L73
      - name: Build amd64 snap
        run: |
          OUT="$(nix build --print-build-logs --print-out-paths .#parca-agent)"
          cp -f "${OUT}/bin/parca-agent" snap/local/parca-agent
          snapcraft pack --verbose --build-for amd64

      - name: Build arm64 snap
        run: |
          OUT="$(nix build --print-build-logs --print-out-paths .#parca-agent-aarch64-linux)"
          cp -f "${OUT}/bin/parca-agent" snap/local/parca-agent
          snapcraft pack --verbose --build-for arm64

      - name: Upload locally built snap artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: built-snaps
          path: |
            *.snap

  test:
    name: Test Snap
    needs: snap
    runs-on: ubuntu-latest
    steps:
      - name: Fetch built snap
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: built-snaps

      - name: Install snap & invoke Parca Agent
        run: |
          sudo snap install --classic --dangerous *_amd64.snap

          sudo snap set parca-agent log-level=debug
          parca-agent --help

      - name: Start Parca Agent - default config
        run: |
          sudo snap start parca-agent

          # Set some options to allow retries while Parca Agent comes back up
          CURL_OPTS=(--max-time 20 --retry 5 --retry-delay 3 --retry-connrefused)

          curl ${CURL_OPTS[@]} http://localhost:7071/
          curl ${CURL_OPTS[@]} http://localhost:7071/metrics

      - name: Configure snap - node name
        run: |
          sudo snap set parca-agent node=foobar
          sudo snap restart parca-agent

          # Set some options to allow retries while Parca Agent comes back up
          CURL_OPTS=(--max-time 20 --retry 5 --retry-delay 3 --retry-connrefused)

          curl ${CURL_OPTS[@]} http://localhost:7071/
          curl ${CURL_OPTS[@]} http://localhost:7071/metrics

      - name: Configure snap - http address
        run: |
          sudo snap set parca-agent http-address=":8081"
          sudo snap restart parca-agent

          # Set some options to allow retries while Parca comes back up
          CURL_OPTS=(--max-time 20 --retry 5 --retry-delay 3 --retry-connrefused)

          curl ${CURL_OPTS[@]} http://localhost:8081/
          curl ${CURL_OPTS[@]} http://localhost:8081/metrics

      # In case the above tests fail, dump the logs for inspection
      - name: Dump snap service logs
        if: failure()
        run: |
          sudo snap logs parca-agent -n=all

  release-edge:
    name: Release Snap (latest/edge)
    needs: test
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: built-snaps

      - name: Install snapcraft
        run: |
          sudo snap install snapcraft --classic --channel=7.x/stable

      - name: Release to latest/edge
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
        run: |
          snapcraft upload *_amd64.snap --release edge
          snapcraft upload *_arm64.snap --release edge
