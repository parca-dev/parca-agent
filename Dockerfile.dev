FROM --platform="${BUILDPLATFORM:-linux/amd64}" docker.io/goreleaser/goreleaser-cross:v1.18.3@sha256:edfe5102c90112ccc8b5c03f8371b885a7f710dc3f1425b671fb3c22901f5138 AS builder
# TODO(kakkoyun): parca-dev/cross-builder!
RUN apt-get update -y && \
    apt-get install -yq libelf-dev zlib1g-dev \
    libelf-dev:arm64 zlib1g-dev:arm64 \
    lld

ARG TARGETARCH=amd64
ARG TARGETOS=linux
ARG TARGETVARIANT

WORKDIR /__w/parca-agent/parca-agent

COPY go.mod go.sum ./
RUN go mod download

# renovate: datasource=go depName=github.com/go-delve/delve
ARG DELVE_VERSION=v1.9.0
# hadolint ignore=DL3059
RUN go install "github.com/go-delve/delve/cmd/dlv@${DELVE_VERSION}"

COPY . ./
# TODO(kakkoyun): Special debug build RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -gcflags="all=-N -l" -o parca ./cmd/parca-agent
RUN goreleaser build --rm-dist --skip-validate --snapshot --debug --id parca-agent-"${TARGETARCH}"

RUN mkdir -p /app
# NOTICE: See goreleaser.yml for the build paths.
RUN if [ "${TARGETARCH}" == 'amd64' ]; then \
        cp "goreleaser/dist/parca-agent-${TARGETARCH}_${TARGETOS}_${TARGETARCH}_${TARGETVARIANT:-v1}/parca-agent" /app/ ; \
    elif [ "${TARGETARCH}" == 'arm' ]; then \
        cp "goreleaser/dist/parca-agent-${TARGETARCH}_${TARGETOS}_${TARGETARCH}_${TARGETVARIANT##v}/parca-agent" /app/ ; \
    else \
        cp "goreleaser/dist/parca-agent-${TARGETARCH}_${TARGETOS}_${TARGETARCH}/parca-agent" /app/ ; \
    fi

FROM --platform="${TARGETPLATFORM:-linux/amd64}" gcr.io/distroless/base-debian11@sha256:a08c76433d484340bd97013b5d868edfba797fbf83dc82174ebd0768d12f491d

COPY --chown=0:0 --from=builder /go/bin/dlv /bin/dlv
COPY --chown=0:0 --from=builder /app/parca-agent /bin/parca-agent

EXPOSE 7071

ENTRYPOINT ["/bin/dlv", "--listen=:40000", "--headless=true", "--api-version=2", "--accept-multiclient", "exec", "--continue", "--"]
